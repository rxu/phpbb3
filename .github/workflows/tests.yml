name: Tests

on:
    push:
        branches:
            - 3.3.x
            - master
            - 'prep-release-*'
            - 'ticket/*'
        tags:
            - 'release-*'
    pull_request:
        branches:
            - 3.3.x
            - master
            - 'prep-release-*'

jobs:
    # Basic checks, e.g. parse errors, commit messages, etc.
    basic-checks:
        runs-on: ubuntu-20.04
        strategy:
            matrix:
                include:
                    - db: 'none'
                      php: '7.2'
                      NOTESTS: 1

        name: PHP ${{ matrix.php }} - ${{ matrix.db }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  fetch-depth: 100

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysqli, sqlite, pdo_sqlite, intl, gd, exif, iconv, sqlsrv, pdo_sqlsrv, ldap
                  coverage: none

            - name: Get Composer Cache Directory
              id: composer-cache
              env:
                  PHP_VERSION: ${{ matrix.php }}
              run: |
                  cd phpBB
                  echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
                  echo "version=${PHP_VERSION%.*}" >> $GITHUB_OUTPUT
                  cd ..

            - name: Cache Composer dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: composer-${{ steps.composer-cache.outputs.version }}-${{ hashFiles('phpBB/composer.lock') }}

            - name: Setup environment for phpBB
              env:
                  DB: ${{ matrix.db }}
                  PHP_VERSION: ${{ matrix.php }}
                  NOTESTS: '1'
              run: |
                  .github/setup-phpbb.sh $DB $PHP_VERSION $NOTESTS

            - name: Phing sniff
              run: |
                  .github/phing-sniff.sh

            - name: Check doctum parse errors
              run: |
                  .github/check-doctum-parse-errors.sh

            - name: Check image ICC profiles
              run: |
                  .github/check-image-icc-profiles.sh

            - name: Check executable files
              run: |
                  .github/check-executable-files.sh ./

            - name: Check commit message
              if: github.event_name == 'pull_request'
              run: |
                  git fetch origin $GITHUB_BASE_REF &> /dev/null
                  git-tools/commit-msg-hook-range.sh $(git rev-parse origin/$GITHUB_BASE_REF)..$GITHUB_SHA

    # Tests for MySQL and MariaDB
    mysql-tests:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                include:
                    - php: '8.0'
                      db: "mysql:5.7"

        name: PHP ${{ matrix.php }} - ${{ matrix.db_alias != '' && matrix.db_alias || matrix.db }}

        services:
            mysql:
                image: ${{ matrix.db }}
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: yes
                    MYSQL_DATABASE: phpbb_tests
                ports:
                    - 3306:3306
                options: >-
                    --health-cmd="mysqladmin ping"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=3

            redis:
                image: redis
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 6379:6379

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - id: database-type
              env:
                  MATRIX_DB: ${{ matrix.db }}
              run: |
                  db=$(echo "${MATRIX_DB%%:*}")
                  echo "db=$db" >> $GITHUB_OUTPUT

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysqli, sqlite, pdo_sqlite, intl, gd, exif, iconv, sqlsrv, pdo_sqlsrv, ldap
                  coverage: none

            - name: Get Composer Cache Directory
              id: composer-cache
              env:
                  PHP_VERSION: ${{ matrix.php }}
              run: |
                  cd phpBB
                  echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
                  echo "version=${PHP_VERSION%.*}" >> $GITHUB_OUTPUT
                  cd ..

            - name: Cache Composer dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: composer-${{ steps.composer-cache.outputs.version }}-${{ hashFiles('phpBB/composer.lock') }}

            - name: Setup environment for phpBB
              env:
                  DB: ${{steps.database-type.outputs.db}}
                  PHP_VERSION: ${{ matrix.php }}
                  NOTESTS: '0'
              run: |
                  .github/setup-phpbb.sh $DB $PHP_VERSION ${NOTESTS:-0}

            - name: Setup database
              env:
                  DB: ${{steps.database-type.outputs.db}}
                  MYISAM: ${{ matrix.MYISAM != 1 && '0' || '1' }}
              run: |
                  .github/setup-database.sh $DB $MYISAM

            - name: Setup LDAP
              if: ${{ matrix.SLOWTESTS == 1 }}
              run: |
                  .github/setup-ldap.sh

            - name: Setup SPHINX
              run: |
                  .github/setup-sphinx.sh

            - name: Lint tests
              if: ${{ matrix.SLOWTESTS != 1 && steps.database-type.outputs.db == 'mysql' }}
              run: phpBB/vendor/bin/phpunit tests/lint_test.php

            - name: Run unit tests
              env:
                  DB: ${{steps.database-type.outputs.db}}
              if: ${{ matrix.SLOWTESTS != 1 && matrix.NOTESTS != 1 }}
              run: |
                  phpBB/vendor/bin/phpunit --configuration .github/phpunit-$DB-github.xml --verbose --stop-on-error

            - name: Slow tests
              env:
                  DB: ${{steps.database-type.outputs.db}}
              if: ${{ matrix.SLOWTESTS == 1 }}
              run: |
                  phpBB/vendor/bin/phpunit --configuration .github/phpunit-$DB-github.xml --group slow
