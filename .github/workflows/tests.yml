name: Tests

on:
    push:
        branches:
            - 3.3.x
            - master
            - 'prep-release-*'
        tags:
            - 'release-*'
    pull_request:
        branches:
            - 3.3.x
            - master
            - 'prep-release-*'

jobs:
    # Basic checks, e.g. parse errors, commit messages, etc.
    # Test with IIS & PostgreSQL on Windows
    windows-tests:
        runs-on: windows-2025
        strategy:
            matrix:
                type: ['functional']
                php: ['8.4']
                db: ['postgres']

        name: Windows - ${{ matrix.type }} - PHP ${{ matrix.php }} - ${{ matrix.db }}

        steps:
            - name: Prepare git for Windows
              run: |
                  git config --system core.autocrlf false
                  git config --system core.eol lf
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: dom, curl, libxml, mbstring, zip, pdo, intl, gd, exif, iconv, pgsql, pdo_pgsql, sodium, bz2, fileinfo, openssl
                  ini-values: upload_tmp_dir=${{ runner.temp }}, sys_temp_dir=${{ runner.temp }}, max_execution_time=0, memory_limit=512M, error_log = c:\tools\Apache24\logs\error.log, doc_root = ${{ github.workspace }}\phpBB
                  coverage: none
              env:
                  PHPTS: ts

            - name: Get Composer Cache Directory
              id: composer-cache
              run: |
                  cd phpBB
                  echo "dir=$(composer config cache-files-dir)" >> $env:GITHUB_OUTPUT
                  cd ..

            - name: Cache Composer dependencies
              uses: actions/cache@v4
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: composer-${{ matrix.php }}-${{ hashFiles('phpBB/composer.lock') }}

            - name: Setup environment for phpBB
              env:
                  GITHUB_WORKSPACE: ${{ github.workspace }}
                  TEMP_DIR: ${{ runner.temp }}
              run: |
                  $apachePath = "C:\tools\Apache24"
                  $apacheConfPath = "C:\tools\Apache24\conf"
                  Set-MpPreference -DisableRealtimeMonitoring $true -DisableScriptScanning $true -DisableBehaviorMonitoring $true -DisableIOAVProtection $true -DisableIntrusionPreventionSystem $true
                  Set-MpPreference -ExclusionPath "C:\tools" # Exclude PGDATA directory from Windows Defender
                  Set-MpPreference -ExclusionPath $apacheConfPath # Exclude PGDATA directory from Windows Defender
                  Set-MpPreference -ExclusionPath ${env:GITHUB_WORKSPACE} # Exclude phpBB directory from Windows Defender
                  Set-MpPreference -ExclusionPath "${env:PGROOT}" # Exclude PGDATA directory from Windows Defender
                  Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False # Disable firewall
                  $apacheConfig = @"
                  AcceptFilter http none
                  AcceptFilter https none
                  LoadModule php_module `"c:\tools\php\php8apache2_4.dll`"
                  AddType application/x-httpd-php .php
                  PHPIniDir `"C:\tools\php`"
                  "@
                  (Get-Content -Path $apacheConfPath\httpd.conf) | ForEach-Object { `
                      $_ -replace '#LoadModule rewrite_module modules/mod_rewrite.so', 'LoadModule rewrite_module modules/mod_rewrite.so' `
                      -replace 'LoadModule status_module modules/mod_status.so', '#LoadModule status_module modules/mod_status.so' `
                      -replace '\${SRVROOT}/htdocs', "${env:GITHUB_WORKSPACE}\phpBB" `
                      -replace 'Listen 80', 'Listen 127.0.0.1:80' `
                      -replace 'ServerName localhost:80', 'ServerName phpbb.test:80' `
                  } | Set-Content -Path $apacheConfPath\httpd.conf  -Force
                  Add-Content -Path $apacheConfPath\httpd.conf -Value "`r`n$apacheConfig" -Force
                  Add-Content -Path $env:windir\System32\drivers\etc\hosts -Value "`r`n127.0.0.1`tphpbb.test" -Force
                  mkdir "${env:GITHUB_WORKSPACE}\phpBB\cache\test"
                  mkdir "${env:GITHUB_WORKSPACE}\phpBB\cache\installer"
                  icacls "${env:GITHUB_WORKSPACE}\phpBB\cache" /grant Users:F /T
                  icacls "${env:GITHUB_WORKSPACE}\phpBB\files" /grant Users:F /T
                  icacls "${env:GITHUB_WORKSPACE}\phpBB\store" /grant Users:F /T
                  icacls "${env:GITHUB_WORKSPACE}\phpBB\ext" /grant Users:F /T
                  icacls "${env:GITHUB_WORKSPACE}\phpBB\vendor-ext" /grant Users:F /T
                  icacls "${env:GITHUB_WORKSPACE}\phpBB\composer-ext.json" /grant Users:F /T
                  icacls "${env:GITHUB_WORKSPACE}\phpBB\composer-ext.lock" /grant Users:F /T
                  icacls "${env:GITHUB_WORKSPACE}\phpBB\images\avatars\upload" /grant Users:F /T
                  Disable-NetAdapterBinding -Name "*" -ComponentID ms_tcpip6
                  net stop http /y
                  cd $apachePath\bin
                  .\httpd.exe -k install -n "Apache24"
                  $apacheSvc = Get-Service "Apache24"
                  Set-Service $apacheSvc.Name -StartupType manual
                  $runningStatus = [System.ServiceProcess.ServiceControllerStatus]::Running
                  $maxStartTimeout = New-TimeSpan -Seconds 30
                  try {
                    $apacheSvc.Start()
                    $apacheSvc.WaitForStatus($runningStatus, $maxStartTimeout)
                  } catch  {
                    $_ | select *
                  }
                  cd ${env:GITHUB_WORKSPACE}\phpBB
                  php ..\composer.phar install
                  cd ..
            - name: Setup database
              run: |
                  (Get-Content -Path $env:PGDATA\postgresql.conf) | ForEach-Object { `
                      $_ -replace "listen_addresses = '\*'", "listen_addresses = 'localhost'" `
                      -replace "shared_buffers = 128MB", "shared_buffers = 512MB" `
                      -replace "#hot_standby = on", "hot_standby = on" `
                  } | Set-Content -Path $env:PGDATA\postgresql.conf  -Force
                  $postgreSqlSvc = Get-Service "postgresql*"
                  Set-Service $postgreSqlSvc.Name -StartupType manual
                  $runningStatus = [System.ServiceProcess.ServiceControllerStatus]::Running
                  $maxStartTimeout = New-TimeSpan -Seconds 30
                  try {
                    $postgreSqlSvc.Start()
                    $postgreSqlSvc.WaitForStatus($runningStatus, $maxStartTimeout)
                  } catch  {
                    $_ | select *
                  }
                  [System.Environment]::SetEnvironmentVariable('PATH',$Env:PATH+";${env:PGBIN}")
                  $env:PGPASSWORD = 'root'
                  psql -c 'DROP DATABASE IF EXISTS phpbb_tests;' -U postgres
                  psql -c 'create database phpbb_tests;' -U postgres

            - name: Setup node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
            - name: Setup node dependencies
              run: npm ci

            - name: Run unit tests
              if: ${{ matrix.type == 'unit' }}
              run: |
                  phpBB/vendor/bin/phpunit --configuration .github/phpunit-psql-windows-github.xml --display-all-issues --stop-on-error --exclude-group functional,slow
            - name: Run functional tests
              if: ${{ matrix.type == 'functional' }}
              run: |
                  phpBB/vendor/bin/phpunit --configuration .github/phpunit-psql-windows-github.xml --teamcity --display-all-issues --stop-on-error --group functional
