name: Tests

on:
    push:
        branches:
            - 3.3.x
            - master
            - task/github-actions
    pull_request:
        branches:
            - 3.3.x
            - master

jobs:
    # Basic checks, e.g. parse errors, commit messages, etc.
    basic-checks:
        runs-on: ubuntu-18.04
        strategy:
            matrix:
                include:
                    - db: 'none'
                      php: '7.1'
                      NOTESTS: 1

        name: PHP ${{ matrix.php }} - ${{ matrix.db }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysqli, sqlite, pdo_sqlite, intl, gd, exif, iconv, sqlsrv, pdo_sqlsrv, ldap
                  coverage: none

            - name: Setup environment for phpBB
              env:
                  DB: ${{ matrix.db }}
                  PHP_VERSION: ${{ matrix.php }}
                  NOTESTS: '1'
              run: |
                  .github/setup-phpbb.sh $DB $PHP_VERSION $NOTESTS

            - name: Phing sniff
              run: |
                  .github/phing-sniff.sh

            - name: Check doctum parse errors
              run: |
                  .github/check-doctum-parse-errors.sh

            - name: Check image ICC profiles
              run: |
                  .github/check-image-icc-profiles.sh

            - name: Check executable files
              run: |
                  .github/check-executable-files.sh ./

            - name: Check commit message
              env:
                  BRANCH: ${{ github.event.pull_request.base.ref }}
                  PR_SHA: ${{ github.event.pull_request.head.sha }}
              if: ${{ github.event.pull_request.head.sha != '' && github.event.pull_request.base.ref != '' }}
              run: |
                  git remote set-branches --add origin $BRANCH && git fetch && git-tools/commit-msg-hook-range.sh origin/$BRANCH..$PR_SHA

    oracle-tests:
        runs-on: ubuntu-18.04
        strategy:
            matrix:
                include:
                    -   php: '8.0'
                        db: "oci"

        name: PHP ${{ matrix.php }} - ${{ matrix.db }}

        services:
            oracle:
                image: deepdiver/docker-oracle-xe-11g
                options: >-
                    --name oci_docker
                ports:
                    - "1521:1521"

            redis:
                image: redis
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 6379:6379

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysqli, sqlite, pdo_sqlite, intl, gd, exif, iconv, sqlsrv, pdo_sqlsrv, ldap, oci8, pdo_oci
                  ini-values: extension=oci8
                  coverage: none

            - name: Setup environment for phpBB
              env:
                  DB: ${{ matrix.db }}
                  PHP_VERSION: ${{ matrix.php }}
                  NOTESTS: '0'
              run: |
                  .github/setup-phpbb.sh $DB $PHP_VERSION ${NOTESTS:-0}

            - name: Setup database
              env:
                  DB: ${{ matrix.db }}
                  MYISAM: '0'
              run: |
                  .github/setup-database.sh $DB $MYISAM

            - name: Adjust OCI config
              run: |
                  docker exec oci_docker sh -c 'echo "grant all privileges to autotest;" | sqlplus system/oracle@localhost'
                  docker exec oci_docker sh -c 'echo "alter system set processes = 1000 scope=spfile;" | sqlplus autotest/owncloud@localhost:1521/xe'
                  docker exec oci_docker sh -c 'echo "alter system set processes = 1000 scope=spfile;" | sqlplus autotest/owncloud@localhost:1521/xe'
                  docker exec oci_docker sh -c 'echo "alter system set open_cursors = 10000 scope=both;" | sqlplus autotest/owncloud@localhost:1521/xe'
                  docker exec oci_docker sh -c '/etc/init.d/oracle-xe restart'

            - name: Run unit tests
              env:
                  DB: ${{ matrix.db }}
              run: |
                  phpBB/vendor/bin/phpunit --configuration .github/phpunit-$DB-github.xml --verbose
